// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  username  String     @unique
  password  String
  email     String     @unique
  bio       String?    @unique
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  tweet     Tweet[]
  like      Like[]
  response  Response[]
}

model Tweet {
  id        Int        @id @default(autoincrement())
  tweet     String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  user      User       @relation(fields: [userId], references: [id])
  userId    Int
  like      Like[]
  response  Response[]
}

model Like {
  createdAt  DateTime @default(now())
  updated_at DateTime @updatedAt
  tweet      Tweet    @relation(fields: [tweetId], references: [id])
  tweetId    Int
  user       User     @relation(fields: [userId], references: [id])
  userId     Int

  @@id(name: "id", [userId, tweetId])
}

model Response {
  id         Int      @id @default(autoincrement())
  payload    String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int
  tweet      Tweet    @relation(fields: [tweetId], references: [id], onDelete: Cascade)
  tweetId    Int
}
